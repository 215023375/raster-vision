syntax = "proto2";

package rv.protos;

import "rastervision/protos/machine_learning.proto";

message TrainConfig {

    message ObjectDetectionOptions {
        // path to Object Detection's train.py script
        optional string train_py = 1 [default="/opt/tf-models/object_detection/train.py"];

        // path to Object Detection's eval.py script
        optional string eval_py = 2 [default="/opt/tf-models/object_detection/eval.py"];

        // path to Object Detection's export_inference_graph.py script
        optional string export_py = 3 [default="/opt/tf-models/object_detection/export_inference_graph.py"];
    }

    message SegmentationOptions {
        optional string train_py = 1 [default="/opt/tf-models/deeplab/train.py"];
        optional string export_model_py = 2 [default="/opt/tf-models/deeplab/export_model.py"];
        required string tf_initial_checkpoints_uri = 3;
        optional int32 training_number_of_steps = 4 [default=0];
        optional string train_split = 5;
        optional string model_variant = 6;
        repeated int32 atrous_rates = 7;
        optional int32 output_stride = 8 [default=16];
        optional int32 decoder_output_stride = 9 [default=4];
        repeated int32 train_crop_size = 10;
        optional int32 train_batch_size = 11 [default=1];
        optional string dataset = 12;
        optional int32 log_steps = 13 [default=10];
        optional int32 save_interval_secs = 14 [default=1200];
        optional int32 save_summaries_secs = 15 [default=29];
        optional bool save_summaries_images = 16 [default=true];
    }

    message Options {
        // URI for a separate training configuration that is specific to an ML
        // backend.
        optional string backend_config_uri = 1;

        // URI for the directory containing the output of make_training_chips.
        optional string training_data_uri = 2;

        // URI for the directory containing the output of training.
        optional string output_uri = 3;

        // URI for the pretrained model file.
        optional string pretrained_model_uri = 4;

        // How often to sync output of training to the cloud (in seconds).
        optional int32 sync_interval = 5 [default=600];

        oneof ml_options_type {
            ObjectDetectionOptions object_detection_options = 6;
            SegmentationOptions segmentation_options = 7;
        }

    }

    required MachineLearning machine_learning = 1;
    required Options options = 2;
}
