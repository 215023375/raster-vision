#!/bin/bash

set -e

if [[ -n "${RASTER_VISION_DEBUG}" ]]; then
    set -x
fi

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ] ; do SOURCE="$(readlink "$SOURCE")"; done
SCRIPTS_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
PROJECT_ROOT="$( cd -P "$( dirname "$SCRIPTS_DIR" )" && pwd )"
SRC="${PROJECT_ROOT}/src"

function usage() {
    echo -n \
         "Usage: $(basename "$0")
Run raster-vision CPU or GPU image locally. Using --aws forwards AWS credentials.
All arguments except --aws, --cpu, and --cpu  are passed to 'docker run'.
"
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    ARGUMENTS="$@"
    IMAGE="raster-vision-cpu"
    RUNTIME=""
    RASTER_VISION_DATA_DIR="${RASTER_VISION_DATA_DIR:-/tmp}"

    if echo "$@" | grep -- '\(^\|[[:space:]]\)--aws\($\|[[:space:]]\)' > /dev/null
    then
    	AWS="yes"
    	ARGUMENTS=$(echo "$ARGUMENTS" | sed 's/--aws//')
    else
    	AWS="no"
    fi

    if echo "$@" | grep -- '\(^\|[[:space:]]\)--gpu\($\|[[:space:]]\)' > /dev/null
    then
    	IMAGE="raster-vision-gpu"
    	RUNTIME="--runtime=nvidia"
    	ARGUMENTS=$(echo "$ARGUMENTS" | sed 's/--gpu//')
    elif echo "$@" | grep -- '\(^\|[[:space:]]\)--cpu\($\|[[:space:]]\)' > /dev/null
    then
    	ARGUMENTS=$(echo "$ARGUMENTS" | sed 's/--cpu//')
    fi

    if [ "$AWS" = "yes" ]
    then
        docker run $RUNTIME --rm -it \
            -e "AWS_PROFILE=$AWS_PROFILE" \
            -v "$HOME/.aws":/root/.aws \
            -p 6006:6006 \
            -v "$SRC":/opt/src \
            -v "${RASTER_VISION_DATA_DIR}":/opt/data \
            "$IMAGE" $ARGUMENTS
    else
        docker run $RUNTIME --rm -it \
            -p 6006:6006 \
            -v "$SRC":/opt/src \
            -v "${RASTER_VISION_DATA_DIR}":/opt/data \
            "$IMAGE" $ARGUMENTS
    fi
fi
